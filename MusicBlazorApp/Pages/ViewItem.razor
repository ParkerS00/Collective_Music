@page "/View-Item/{ItemId:int}"
@using MusicApi.Data;
@using MusicBlazorApp.Data;
@inject IConfiguration config;
@inject HttpClient httpClient;
@inject IHostEnvironment Environment

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
</style>

@if (Item is not null)
{
    <div class="row main-container">
        <div class="col-md-6">
            <div class="d-flex flex-column">
                @foreach (var img in ImgFilePaths)
                {
                    <img src="@img" class="img-fluid img" />
                }
            </div>
            <div id="carouselExampleControls" class="carousel slide d-none" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="@ImgFilePaths.FirstOrDefault()" alt="@Item.ItemName" />
                    </div>

                    <div class="carousel-item">
                        <img class="d-block w-100" src="@ImgFilePaths.LastOrDefault()" alt="@Item.ItemName" />
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev" style="background-color: black;">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next" style="background-color: black;">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
        <div class="col-md-6">
            <h1>@Item.ItemName</h1>
            <p><strong>$@Item.SellPrice</strong></p>
            <div class="ratings my-5">
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star"></i>
                <span>4.35 rating out of 5<br /><a href="#">Leave a Review</a></span>
            </div>
            <h5><strong>Description</strong></h5>
            <p>@Item.Description</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam tempor quam velit. Cras aliquet, eros vitae varius faucibus, tellus neque dignissim tellus, id efficitur massa metus vitae neque. Cras id lorem non risus vehicula eleifend. In venenatis tellus orci, non eleifend lacus ultrices eget. Nullam odio elit, elementum in nunc maximus, consequat maximus tortor. Morbi interdum libero ac orci hendrerit aliquam. Sed mollis neque odio, eget tincidunt nibh faucibus quis. Nam elementum quis neque iaculis hendrerit. Vivamus id arcu faucibus, faucibus arcu ultricies, dictum mi. Mauris non enim posuere, tristique mi at, euismod tortor. Ut porttitor magna non purus tincidunt vestibulum. Ut aliquam viverra ipsum, id malesuada arcu viverra nec. Phasellus eu quam pellentesque, pulvinar tellus quis, fermentum nisl. Curabitur pulvinar molestie massa. Nam sit amet orci lacus.</p>

            <p>In diam libero, imperdiet non felis quis, aliquam egestas nibh. In tincidunt justo non lacinia tristique. Aenean nibh leo, scelerisque eget condimentum vitae, porttitor eu arcu. Donec ac ligula volutpat, laoreet lacus et, lacinia purus. Nunc efficitur velit vel imperdiet sollicitudin. Integer aliquam orci a ipsum euismod convallis. Sed tincidunt nibh mi, a eleifend tellus venenatis sit amet.</p>

            <h5>Purchase Information</h5>
            <hr>
            <div class="row">
                <div class="col-md-6"><p>Purchase new or used and pick up in store. </p></div>
                <div class="col-md-6">
                    <div class="red-button"><h5><a href="#">Purchase</a></h5></div>
                </div>
            </div>

            <h5>Rental Information</h5>
            <hr />
            <div class="row">
                <div class="col-md-6"><p>Rent this item. Pick up and drop off in store.</p></div>
                <div class="col-md-6">
                    <div class="red-button"><h5><a href="#">Rent</a></h5></div>
                </div>
            </div>
        </div>

        <div>
            <h3>Reviews</h3>
            <hr />
            @if (Reviews is not null)
            {
                @foreach (var rev in Reviews)
                {
                    <div class="row review-tile p-4 m-3">
                        <h5>@rev.Customer</h5>
                        <div class="ratings">
                            <i class="fa fa-star rating-color"></i>
                            <i class="fa fa-star rating-color"></i>
                            <i class="fa fa-star rating-color"></i>
                            <i class="fa fa-star rating-color"></i>
                            <i class="fa fa-star"></i>
                            <span>@rev.Rating rating out of 5</span>
                        </div>
                        <p>@rev.ReviewText</p>
                    </div>
                }
            }
            else
            {
                <p>No Reviews for this item yet</p>
                <a href="#">Leave a Review</a>
            }
        </div>
    </div>
}
else
{
    <h1>Loading...</h1>
}


@code {
    [Parameter]
    public int ItemId { get; set; }

    public List<Review>? Reviews { get; set; }

    public ItemDto Item { get; set; }

    public List<string> ImgFilePaths { get; set; } = new();

    public bool IsFirstImg = true;

    protected override async Task OnInitializedAsync()
    {
        Item = await httpClient.GetFromJsonAsync<ItemDto>($"{config[Constants.ApiEndpoint]}/Items/{ItemId}");

        if (Item is not null)
        {
            Reviews = Item.Reviews;
            foreach (var img in Item.ImageFilePaths)
            {
                ImgFilePaths.Add(Path.Combine("css", "images", "itemImages", $"{img}"));
            }
        }

    }

    public static string UpdateIsFirstImg(bool IsFirstImg)
    {
        IsFirstImg = false;
        return "";
    }
}
