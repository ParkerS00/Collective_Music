@page "/View-Item/{ItemId:int}"
@using MusicApi.Data;
@using MusicApi.Request;
@using MusicBlazorApp.Data;
@using MusicApi.FrontFacingData;
@using MusicBlazorApp.State;
@inject UserManager<IdentityUser> userManager;
@inject IConfiguration config;
@inject HttpClient httpClient;
@inject AuthenticationStateProvider auth;
@inject IHostEnvironment Environment;
@inject NavigationManager nav;
@inject CartState cartState;



<style>
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
</style>


@if (Item is not null)
{
    @if (PopupVisible)
    {
        <div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Edit User</h3>
                        <!-- Button to close the popup -->
                        <button type="button" class="close"
                        @onclick="TogglePopUp">
                            <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <!-- Edit form for the current user -->
                    <div class="modal-body">
                        <p>Rating out of 5</p>
                        <input type="number" min="1" max="5" @bind-value="ReviewRating" />
                        <p>Review Text</p>
                        <input type="text" @bind-value="ReviewTxt" />
                        <br /><br />
                        <!-- Button to submit the review -->
                        <button class="btn btn-primary"
                        @onclick="SubmitReview">
                            Submit
                        </button>

                        <br />
                        <span style="color:red">@strError</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="overlay d-none" style="background-attachment: fixed; position: absolute; height: 100vh; width: 100vw; background-color: rgba(0, 0, 0, 0.5);">
            <div class="p-5" style="position: absolute; height: 500px; width: 600px; background-color: rgba(255, 255, 255, 1); top: 35%; left: 30%; z-index: 1; border-radius: 10px;">
                <h2>Review Item</h2>
                <form>
                    <p>Rating out of 5</p>
                    <input type="number" min="1" max="5" />
                    <p>Review Text</p>
                    <input type="text" />
                </form>
                <button class="btn btn-primary" @onclick="TogglePopUp">Submit</button>
            </div>

        </div>
    }
    <div class="row main-container">
        <div class="col-md-6">
            <div class="d-flex flex-column">
                @foreach (var img in ImgFilePaths)
                {
                    <img src="@img" class="img-fluid img" />
                }
            </div>
            <div id="carouselExampleControls" class="carousel slide d-none" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="@ImgFilePaths.FirstOrDefault()" alt="@Item.ItemName" />
                    </div>

                    <div class="carousel-item">
                        <img class="d-block w-100" src="@ImgFilePaths.LastOrDefault()" alt="@Item.ItemName" />
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev" style="background-color: black;">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next" style="background-color: black;">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>
        <div class="col-md-6">
            <h1>@Item.ItemName</h1>
            <p><strong>$@Item.SellPrice</strong></p>
            <div class="ratings my-5">
                @for (int i = 1; i <= 5; i++)
                {
                    @if (ItemAverageRating >= i)
                    {
                        <i class="fa fa-star rating-color"></i>
                    }
                    else
                    {
                        <i class="fa fa-star"></i>
                    }
                }
                @if (CurrentUserId == 0)
                {
                    <span class="mx-3"><a href="/Identity/Account/Login">Login to leave a review!</a></span>
                }
                else if (CurrentUserName is null)
                {
                    <span class="mx-3"><a href="/Account">Finish Setting Up Your Account To Leave A Review</a></span>
                }
                else if (ItemAverageRating != 0)
                {
                    <span class="mx-3">@ItemAverageRating rating out of 5<br /><a style="color: blue; text-decoration: underline;" @onclick="TogglePopUp">Leave a Review</a></span>
                }
                else
                {
                    <span class="mx-3">There are no reviews yet<a style="color: blue; text-decoration: underline;" @onclick="TogglePopUp">Leave a Review</a></span>
                }
            </div>
            <h5><strong>Description</strong></h5>
            <p>@Item.Description</p>
            <h5>Purchase Information</h5>
            <hr>
            <div class="row">
                <div class="col-md-6"><p>Purchase new or used and pick up in store. </p></div>
                <div class="col-md-6">
                    @if (CurrentUserName is null)
                    {
                        @if (CurrentUserId == 0)
                        {
                            <div class="red-button"><h5><a href="/Identity/Account/Login">Purchase</a></h5></div>
                        }
                        else
                        {
                            <div class="red-button"><h5><a href="/Account">Purchase</a></h5></div>
                        }
                    }
                    else
                    {
                        <div class="red-button"><h5 @onclick="() => ShowPopup = true">Purchase</h5></div>
                    }
                </div>
            </div>

            <h5>Rental Information</h5>
            <hr />
            <div class="row">
                <div class="col-md-6"><p>Rent this item. Pick up and drop off in store.</p></div>
                <div class="col-md-6">
                    @if (CurrentUserName is null)
                    {
                        @if (CurrentUserId == 0)
                        {
                            <div class="red-button"><h5><a href="/Identity/Account/Login">Rent</a></h5></div>
                        }
                        else
                        {
                            <div class="red-button"><h5><a href="/Account">Rent</a></h5></div>
                        }
                    }
                    else
                    {
                        <div class="red-button"><h5><a href="/#">Rent</a></h5></div>
                    }
                </div>
            </div>
        </div>

        <div>
            <h3>Reviews</h3>
            <hr />
            @if (Reviews is not null)
            {
                @foreach (var rev in Reviews)
                {
                    <div class="row review-tile p-4 m-3">
                        <h5>@rev.Author</h5>
                        <small>@rev.Date</small>
                        <div class="ratings">
                            @for (int i = 1; i <= 5; i++)
                            {
                                @if (rev.Rating >= i)
                                {
                                    <i class="fa fa-star rating-color"></i>

                                }
                                else
                                {
                                    <i class="fa fa-star"></i>

                                }
                            }


                            <span class="px-3">@rev.Rating rating out of 5</span>
                        </div>
                        <p class="m-3">@rev.Text</p>
                    </div>
                }
            }
            else
            {
                <p>No Reviews for this item yet</p>
                <a href="#">Leave a Review</a>
            }
        </div>
    </div>
}
else
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}

@if (ShowPopup)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Add New Item</h3>
                    <!-- Button to close the popup -->
                    <button type="button" class="close"
                    @onclick="() => ShowPopup = false">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <!-- Edit form for the current user -->
                <div class="modal-body">
                    <!-- Only show Id if not a new user -->
                    <input type="number" @bind="quantity">
                    <button class="btn btn-primary" @onclick="() => AddItemToCart(Item)">Submit</button>
                    <button class="btn btn-primary" @onclick="() => {ShowPopup = false; quantity = 0;}">Cancel</button>
                    <br />
                    @* <span style="color:red">@strError</span> *@
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public int ItemId { get; set; }

    public IEnumerable<ReviewDto>? Reviews { get; set; }

    public ItemDto Item { get; set; }

    public List<string> ImgFilePaths { get; set; } = new();

    public bool IsFirstImg = true;

    // Review Stuff
    public decimal? ItemAverageRating { get; set; }

    bool PopupVisible { get; set; }

    public string strError { get; set; }

    public string ReviewTxt { get; set; }

    public int ReviewRating { get; set; }

    public bool ShowPopup { get; set; }

    public int quantity { get; set; }

    // User Stuff
    public IdentityUser objUser = new();

    public int CurrentUserId { get; set; }
    public string CurrentUserName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Item = await httpClient.GetFromJsonAsync<ItemDto>($"{config[Constants.ApiEndpoint]}/Items/{ItemId}");

        if (Item is not null)
        {
            Reviews = Item.Reviews;
            foreach (var img in Item.ImageFilePaths)
            {
                ImgFilePaths.Add(Path.Combine("css", "images", "itemImages", $"{img}"));
            }
        }

        var authstate = await auth.GetAuthenticationStateAsync();
        var user = authstate.User;
        var name = user.Identity.Name;

        var allCustomers = await httpClient.GetFromJsonAsync<IEnumerable<Customer>>($"{config[Constants.ApiEndpoint]}/customer");

        foreach (var cust in allCustomers)
        {
            if (cust.Email == name)
            {
                CurrentUserId = cust.Id;
                CurrentUserName = cust.FirstName;
            }
        }


        GetAverageRating();
    }

    public static string UpdateIsFirstImg(bool IsFirstImg)
    {
        IsFirstImg = false;
        return "";
    }

    public void GetAverageRating()
    {
        if (Item.Reviews.Count() > 0)
        {
            decimal sum = 0;
            foreach (var rating in Item.Reviews)
            {
                sum += (decimal)rating.Rating;
            }

            ItemAverageRating = Math.Round((sum / (decimal)Item.Reviews.Count()), 1);
        }
        else
        {
            ItemAverageRating = 0;
        }
    }

    public void TogglePopUp()
    {
        PopupVisible = !PopupVisible;
    }

    public async Task SubmitReview()
    {
        var request = new AddReviewRequest(Item.Id, CurrentUserId, DateOnly.FromDateTime(DateTime.Now), ReviewTxt, ReviewRating);
        var response = await httpClient.PostAsJsonAsync($"{config[Constants.ApiEndpoint]}/review/{request}", request);

        TogglePopUp();  // close popup
        nav.NavigateTo(nav.Uri, forceLoad: true);
    }

    public void AddItemToCart(ItemDto itemDto)
    {
        for(int i = 0; i < quantity; i ++)
        {
            cartState.SelectedItems.Add(itemDto);
        }
        ShowPopup = false;
    }
}
