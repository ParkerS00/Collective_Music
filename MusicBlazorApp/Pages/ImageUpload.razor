@page "/ImageUpload"
@inject IHostEnvironment Environment
@inject HttpClient httpClient;
@inject AuthenticationStateProvider auth
@using MusicBlazorApp.Data;

<h1>ImageUpload</h1>

<div>
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th scope="col">SKU</th>
                <th scope="col">Item Name</th>
                <th scope="col">Description</th>
                <th scope="col">$Sell Price</th>
                <th scope="col">$Suggested Rental Price</th>
                <th scope="col">#</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Items)
            {
                <tr>
                    <td>@item.SerialNumber</td>
                    @if (selectedItem != item)
                    {
                        <td>@item.ItemName</td>
                        <td>@item.Description</td>
                        <td>@item.SellPrice</td>
                        <td>@item.SuggestedRentalPrice</td>
                    }
                    else
                    {

                        <td>
                            <div class="form-row">
                                <div class="input-group">
                                    <input type="text" class="form-control text">
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-row">
                                <div class="input-group">
                                    <input type="text" class="form-control text">
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-row">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <input type="number" value="@item.SellPrice" min="0" step="0.01" data-number-to-fixed="2" data-number-stepfactor="100" class="form-control currency" id="c2" />
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-row">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <input type="number" value="@item.SuggestedRentalPrice" min="0" step="0.01" data-number-to-fixed="2" data-number-stepfactor="100" class="form-control currency" id="c2" />
                                </div>
                            </div>
                        </td>
                    }
                    <td><button class="btn btn-primary" @onclick="() => EditItem(item)">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
</div>


@* <InputFile OnChange="@LoadFiles" multiple />
<p>@FilePath</p>
<div><button @onclick="SaveImage">Save</button></div> *@

@code {
    string FilePath { get; set; } = "";
    List<Item> Items { get; set; } = new();
    Item selectedItem = new();
    IBrowserFile image;

    protected override async Task OnInitializedAsync()
    {
        Items = await httpClient.GetFromJsonAsync<List<Item>>("https://musicapi20231118154059.azurewebsites.net/items");
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        image = e.File;
        FilePath = Path.Combine(Environment.ContentRootPath, "wwwroot", "css", "images", "itemImages", "1.jpg");

    }

    private async Task SaveImage()
    {

        if (image is not null)
        {
            await using FileStream fs = new(FilePath, FileMode.Create);
            await image.OpenReadStream().CopyToAsync(fs);
        }
    }

    private void EditItem(Item selected)
    {
        selectedItem = selected;
    }
}
