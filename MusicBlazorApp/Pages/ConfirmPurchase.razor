@page "/confirm"

@using MusicApi.Data;
@using MusicBlazorApp.State;
@using MusicApi.Dtos;
@inject HttpClient httpClient;
@inject IConfiguration config;
@inject CartState cartState;
@inject NavigationManager NavManager;
@inject AuthenticationStateProvider auth;

<PageTitle>Order Confirmation</PageTitle>

@if (cartState.SelectedItems is not null)
{
    <div style="max-width: 1000px; margin-left: auto; margin-right: auto; margin-bottom: 300px;">
        <center>
        <h3 class="my-5">Thank you for your order!</h3>

        <h4>What's Next?</h4>
        <p>Now that you have purchased, we will reserve your item for pickup.</p>

            <h4><a class=" p-3 pt-1 px-4 red-button mb-5" href="/my-account" sytle="text-decoration: none; text-underline: none;">View Account Information</a></h4></center>

        <!-- Visit our Location -->
        <div class="button-section mx-5 mt-5">
            <div class="location-wrapper d-flex flex-row justify-content-center flex-sm-wrap">
                <div class="location-descriptions m-2 p-5 ">
                    <center><h1 style="font-weight: 900;">Visit our location</h1></center>
                    <h4>54 N Main St<br /> Ephraim, Utah <br />84337<br /> <br />(435) 111-1234</h4>
                </div>
                <div class="location-descriptions m-2 p-5">
                    <img class="map img img-fluid" src="css/images/map.png" style="max-width: 300px;" />
                </div>
            </div>
        </div>

</div>
}



@code {
    public decimal? CartTotal = 0;
    public string UserEmail { get; set; }
    public int CustomerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authstate = await auth.GetAuthenticationStateAsync();
        var user = authstate.User;
        var name = user.Identity.Name;

        if (name is null)
        {
            name = "";
        }
        //TODO: CHANGE THIS TO BE THE USERS EMAIL
        await cartState.RefreshCart(name);
        UserEmail = name;

        var dbCustomer = await httpClient.GetFromJsonAsync<Customer>($"{config[Constants.ApiEndpoint]}/customer/{name}");
        CustomerId = dbCustomer.Id;

        CalculateCartTotal();
    }

    public async Task HandleDelete(int itemId, string status)
    {
        var response = await httpClient.DeleteAsync($"{config[Constants.ApiEndpoint]}/cart/{CustomerId}/{itemId}/{status}");
        NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
    }

    public void CalculateCartTotal()
    {
        foreach (var itemResult in cartState.SelectedItems)
        {
            int? qty = itemResult.Quantity;
            decimal? sprice = itemResult.Item.SellPrice;
            CartTotal += (qty * sprice);
        }
    }

}
